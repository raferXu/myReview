.transparent_class {  
      filter:alpha(opacity=50);  
      -moz-opacity:0.5;  
      -khtml-opacity: 0.5;  
      opacity: 0.5;  
}  

["1", "2", "3"].map(parseInt)答案是[1, NaN, NaN] 
var parseInt = function(string, radix) {
    return string + "-" + radix;
};

["1", "2", "3"].map(parseInt);
输出结果为
["1-0", "2-1", "3-2"]

var parseInt = function(string, radix, obj, other) {
    return string + "-" + radix + "-" + obj + "-" + other;
};

["1", "2", "3"].map(parseInt);
输出结果：
["1-0-1,2,3-undefined", "2-1-1,2,3-undefined", "3-2-1,2,3-undefined"]
第四个参数为 undefined，看见 map 确实为 parseInt 传递了三个参数(element, index, array)


DOM基础教程之事件类型
1.鼠标事件：click	mouseover
2.键盘事件  keydown	keypress	keyup
3.htm事件  load	error	submit	change	focus

事件模型
DOM0级	函数实例的引用指派到DOM元素的属性
事件处理程序被设置为js代码串作为html的性质值
<img id="vstar" src="vstar.jpg" onclick="say('Vroom vroom!')"/> 
DOM第0级的缺点是，属性被用于存储作为事件处理程序的函数的引用，所以每个元素对于任何特定的事件类型，每次只能注册一个事件处理程序

事件监听函数如果返回一个值并且是false，则会阻止浏览器执行默认的动作

1级DOM标准中并没有定义事件相关的内容，所以没有所谓的1级DOM事件模型


DOM第2级事件模型（也称为监听器）,0级DOM事件模型处理没有capturing阶段
每个DOM元素都定义名为addEventListener()的方法
var element = $('#vstar')[0]; 
element.addEventListener('click',function(event) { 
say('Whee once!'); 
},false); 	//参数useCapture是布尔类型

1 .addEventListener第一个参数是String，事件类型名，没有前缀on，比如要注册click事件就传入“click”
，不是“onclick”
2 .第二个参数是监听函数，在调用的时候js会传给他一个Event对象，这个对象放了有关事件的细节，如果调用的这个对象的stopPropagation()方法，则会阻止事件传播进一步传播（比如在第一个阶段捕捉到事件并运行事件监听函数，其中调用了event。stopPropagation则事件就不会再被传播经历第二第三阶段了） 
3 .第三个参数是boolean，true表示事件监听函数能够在三个阶段中的任意一个阶段捕捉到事件（符合2级DOM标准），如果是false就表示事件监听函数不能在capturing阶段捕捉到事件（表现同0级DOM）。

IE事件模型 
1.Event对象不是传递给事件监听函数，而是通过window对象的event属性访问Event对象.
2.IE Event对象常用属性
type:                      

        兼容DOM的type属性
srcElement: 　　　　　　

       兼容DOM的target属性
clientX, clientY:       

       兼容DOM的clientX, clientY属性
cancelBubble: 
       布尔值，设为true同调用stopPropagation()
returnValue: 
       布尔值，设为false同调用preventDefault()
Event对象不是传递给事件监听函数，而是通过window对象的event属性访问Event对象.
没有addEventListener,只有attachEvent。２个参数，同addEventListener前两个，只是事件名带前缀on。　IE事件模型没有capturing阶段所以调用attachEvent相当于调用addEvetnListener且第三个参数为false:
用attachEvent注册的函数将被作为全局函数调用，而不是作为发生事件的文档元素的方法，也就是说this引用的是window对象，而不是事件的目标元素。



怎么判断json为空
jQuery源码分析6: jQuery.isEmptyObject与jQuery.isPlainObject
isEmptyObject: function( obj ) {
    for ( var name in obj ) {
        return false;
    }
    return true;
},


// 必须是一个Object,同时需要过滤掉DOM对象
    // Because of IE, we also have to check the presence of the constructor property.
    if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
        return false;
    }























